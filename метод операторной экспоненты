from scipy.fft import fft, ifft, fftfreq
import numpy as np
import matplotlib.pyplot as plt
'''
1j*ut=uxx+(mod(u)**2)*u
u(-1,t)=u(1,t)=0
u(x,0)=3*exp(-8*x**2)
'''
#Метод операторной экспоненты

def u0(x):
    return 3*np.exp(-8*(x**2))
u=np.zeros((1000,1000),dtype=np.complex64)
meshx=np.arange(-1,1,0.002)
mesht=np.arange(0,5,0.005)
dt=0.005

for i in range(1000):
    u[0][i]=u0(meshx[i])

k=fftfreq(1000)*np.pi*1000

for i in range(1,1000):
    u[i]= ifft(np.exp(1j*(k**2)*dt)*fft(u[i-1]*np.exp(1j*dt*((abs(u[i-1]))**2))))

#Проверка сохранения интеграла p1

def p1(j):
     s=0
     for i in range (1000):
          s = s + 0.002*(abs(u[j][i])**2)
     return s
test=np.zeros(1000)

for i in range(1000):
     test[i]=p1(i)
print(test)

p1_initial=0
for i in range(1000):
     p1_initial = p1_initial + 0.002*(u0(-1+0.002*i)**2)
print(p1_initial)

#Построение графика реальной части u(x,t)
X, Y = np.meshgrid(meshx, mesht)                 
Z=np.real(u)
ax = plt.axes(projection ='3d') 
ax.set_xlabel('x')
ax.set_ylabel('t')
ax.set_title('Реальная часть u(x,t)')
ax.plot_surface(X, Y, Z,cmap='ocean')    
plt.show()
