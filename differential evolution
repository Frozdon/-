import math
import random
import matplotlib.pyplot as plt
import numpy as np
def func(x,y):
       return(((y-x*math.exp(x))**2) + math.cosh(x*y))
# evolution method
n=100 #start population
mu=1e-7 #parametr of mutation
population=[]
r0 = random.random()
f=1
f1=0
x = []
y = []
for j in range(n):
    a=random.uniform(-10,10)
    b=random.uniform(-10,10)
    population.append([a,b])
#start population show
for i in range(len(population)):
       x.append(population[i][0])
       y.append(population[i][1])
sizes = np.random.uniform(15, 80, len(x))
colors = np.random.uniform(15, 80, len(x))
fig, ax = plt.subplots()
ax.scatter(x, y, s=sizes, c=colors, vmin=0, vmax=100)
ax.set(xlim=(-10, 10), xticks=np.arange(-10, 10),
           ylim=(-10, 10), yticks=np.arange(-10, 10))
plt.show()
def new_population(parents):
       children=[]
       for i in range(len(parents)):
              for j in range(len(parents)):
                     if j!=i:
                            r1=random.random()
                            children.append([(parents[i][0]*r0+parents[j][0]*(1-r0)+mu*abs(parents[i][0]-parents[j][0])*r1),(parents[i][1]*r0+parents[j][1]*(1-r0)+mu*abs(parents[i][1]-parents[j][1])*r1)])
       return(children)
def segragation(children,parents):
       kriteriy=[]
       new_generation=[]
       for i in range(len(children)):
              kriteriy.append([func(children[i][0],children[i][1]),i])
       kriteriy.sort(key=lambda x: x[0])
       for i in range(len(parents)):
              new_generation.append(children[kriteriy[i][1]])
       return(new_generation)
while abs(f1-f)>e:
       f1=f
       population=segragation(new_population(population),population)
       population.sort(key=lambda x: func(x[0],x[1]))
       f=func(population[0][0],population[0][1])
       #plot
       x=[]
       y=[]
       for i in range(len(population)):
              x.append(population[i][0])
              y.append(population[i][1])
       sizes = np.random.uniform(15, 80, len(x))
       colors = np.random.uniform(15, 80, len(x))
       fig, ax = plt.subplots()
       ax.scatter(x, y, s=sizes, c=colors, vmin=0, vmax=100)
       ax.set(xlim=(-10, 10), xticks=np.arange(-10, 10),
              ylim=(-10, 10), yticks=np.arange(-10, 10))
       plt.show()
print("evolution")
print(population[0][0],population[0][1])
print(func(population[0][0],population[0][1]))
